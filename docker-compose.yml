version: "3.8"

services:
  keycloak-db:
    image: postgres:15.2-alpine
    restart: unless-stopped
    container_name: komek-keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
    networks:
      - komek

  db:
    image: postgres:15.2-alpine
    restart: unless-stopped
    container_name: komek-db
    volumes:
      - komek-db:/var/lib/postgresql/data
#      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=app
      - POSTGRES_DB=app
      - POSTGRES_PASSWORD=secret
    networks:
      - komek

  cache:
    image: redis:7.0-alpine
    restart: unless-stopped
    container_name: komek-cache
    ports:
      - '6380:6379'
    networks:
      - komek
    command: redis-server --save 20 1 --loglevel warning --requirepass secret
    volumes:
      - cache:/data

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: komek-keycloak
    restart: unless-stopped
    command: -v start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: secret
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: app
      KC_DB_PASSWORD: secret
    ports:
      - "8181:8080"
    depends_on:
      - keycloak-db
    networks:
      - komek

#  app:
#    build:
#      context: .
#      dockerfile: prod.Dockerfile
#    restart: unless-stopped
#    ports:
#      - "8888:8888"
#    container_name: komek-app
#    environment:
#      - DB_SOURCE=postgresql://app:secret@db:5432/app?sslmode=disable
#    networks:
#      - komek
#    depends_on:
#      - db
#      - cache
#    entrypoint:
#      - "/app/wait-for.sh"
#      - "db:5432"
#      - "--"
#      - "/app/start.sh"
#    command:
#      - "/app/main"

#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    restart: unless-stopped
#    ports:
#      - "8888:8888"
#    volumes:
#      - ./:/app/
#    container_name: komek-app
#    networks:
#      - komek
#    depends_on:
#      - db
#    command: air main.go

volumes:
  cache:
  komek-db:

networks:
  komek:
    driver: bridge
    name: komek