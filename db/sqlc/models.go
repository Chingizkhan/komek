// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package sqlc

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Account struct {
	ID        int64              `json:"id"`
	Owner     pgtype.UUID        `json:"owner"`
	Balance   int64              `json:"balance"`
	Currency  string             `json:"currency"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type Accumulation struct {
	ID        pgtype.UUID    `json:"id"`
	Goal      pgtype.Numeric `json:"goal"`
	Collected pgtype.Numeric `json:"collected"`
	AccountID int64          `json:"account_id"`
}

type Category struct {
	ID   pgtype.UUID `json:"id"`
	Name pgtype.Text `json:"name"`
}

type Client struct {
	ID            pgtype.UUID      `json:"id"`
	Name          pgtype.Text      `json:"name"`
	Phone         pgtype.Text      `json:"phone"`
	Email         pgtype.Text      `json:"email"`
	Age           pgtype.Numeric   `json:"age"`
	City          pgtype.Text      `json:"city"`
	Address       pgtype.Text      `json:"address"`
	Description   pgtype.Text      `json:"description"`
	Circumstances pgtype.Text      `json:"circumstances"`
	ImageUrl      pgtype.Text      `json:"image_url"`
	CreatedAt     pgtype.Timestamp `json:"created_at"`
	UpdatedAt     pgtype.Timestamp `json:"updated_at"`
}

type ClientCategory struct {
	ClientID   pgtype.UUID `json:"client_id"`
	CategoryID pgtype.UUID `json:"category_id"`
}

type Entry struct {
	ID        int64 `json:"id"`
	AccountID int64 `json:"account_id"`
	// can be negative or positive
	Amount    int64              `json:"amount"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type Organisation struct {
	ID        pgtype.UUID      `json:"id"`
	Name      string           `json:"name"`
	Bin       string           `json:"bin"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	UpdatedAt pgtype.Timestamp `json:"updated_at"`
}

type Session struct {
	ID           pgtype.UUID        `json:"id"`
	UserID       pgtype.UUID        `json:"user_id"`
	RefreshToken string             `json:"refresh_token"`
	UserAgent    string             `json:"user_agent"`
	ClientIp     string             `json:"client_ip"`
	IsBlocked    bool               `json:"is_blocked"`
	ExpiresAt    pgtype.Timestamptz `json:"expires_at"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

type Transfer struct {
	ID            int64 `json:"id"`
	FromAccountID int64 `json:"from_account_id"`
	ToAccountID   int64 `json:"to_account_id"`
	// must be positive
	Amount    int64              `json:"amount"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type User struct {
	ID                pgtype.UUID      `json:"id"`
	Name              pgtype.Text      `json:"name"`
	Login             pgtype.Text      `json:"login"`
	Email             pgtype.Text      `json:"email"`
	EmailVerified     pgtype.Bool      `json:"email_verified"`
	PasswordHash      string           `json:"password_hash"`
	Phone             pgtype.Text      `json:"phone"`
	Roles             string           `json:"roles"`
	PasswordChangedAt pgtype.Timestamp `json:"password_changed_at"`
	CreatedAt         pgtype.Timestamp `json:"created_at"`
	UpdatedAt         pgtype.Timestamp `json:"updated_at"`
}
