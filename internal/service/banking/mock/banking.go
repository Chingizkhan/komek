// Code generated by MockGen. DO NOT EDIT.
// Source: komek/internal/controller/http/v1 (interfaces: Banking)
//
// Generated by this command:
//
//	mockgen -package mock_banking -destination internal/service/banking/mock/banking.go komek/internal/controller/http/v1 Banking
//

// Package mock_banking is a generated GoMock package.
package mock_banking

import (
	context "context"
	domain "komek/internal/domain"
	dto "komek/internal/dto"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockBanking is a mock of Banking interface.
type MockBanking struct {
	ctrl     *gomock.Controller
	recorder *MockBankingMockRecorder
}

// MockBankingMockRecorder is the mock recorder for MockBanking.
type MockBankingMockRecorder struct {
	mock *MockBanking
}

// NewMockBanking creates a new mock instance.
func NewMockBanking(ctrl *gomock.Controller) *MockBanking {
	mock := &MockBanking{ctrl: ctrl}
	mock.recorder = &MockBankingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBanking) EXPECT() *MockBankingMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockBanking) CreateAccount(arg0 context.Context, arg1 dto.CreateAccountIn) (domain.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", arg0, arg1)
	ret0, _ := ret[0].(domain.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockBankingMockRecorder) CreateAccount(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockBanking)(nil).CreateAccount), arg0, arg1)
}

// GetAccount mocks base method.
func (m *MockBanking) GetAccount(arg0 context.Context, arg1 dto.GetAccountIn) (domain.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccount", arg0, arg1)
	ret0, _ := ret[0].(domain.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccount indicates an expected call of GetAccount.
func (mr *MockBankingMockRecorder) GetAccount(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccount", reflect.TypeOf((*MockBanking)(nil).GetAccount), arg0, arg1)
}

// Transfer mocks base method.
func (m *MockBanking) Transfer(arg0 context.Context, arg1 dto.TransferIn) (dto.TransferOut, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Transfer", arg0, arg1)
	ret0, _ := ret[0].(dto.TransferOut)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Transfer indicates an expected call of Transfer.
func (mr *MockBankingMockRecorder) Transfer(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Transfer", reflect.TypeOf((*MockBanking)(nil).Transfer), arg0, arg1)
}
